{"version":3,"sources":["assets/heroes sync /^/.//.*$","assets/heroes/dc-arrow.jpg","assets/heroes/dc-batman.jpg","assets/heroes/dc-black.jpg","assets/heroes/dc-blue.jpg","assets/heroes/dc-flash.jpg","assets/heroes/dc-green.jpg","assets/heroes/dc-martian.jpg","assets/heroes/dc-robin.jpg","assets/heroes/dc-superman.jpg","assets/heroes/dc-wonder.jpg","assets/heroes/marvel-captain.jpg","assets/heroes/marvel-cyclops.jpg","assets/heroes/marvel-daredevil.jpg","assets/heroes/marvel-hawkeye.jpg","assets/heroes/marvel-hulk.jpg","assets/heroes/marvel-iron.jpg","assets/heroes/marvel-silver.jpg","assets/heroes/marvel-spider.jpg","assets/heroes/marvel-thor.jpg","assets/heroes/marvel-wolverine.jpg","auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/NavBar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroesById.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","type","payload","name","replace","NavBar","user","useHistory","to","activeClassName","exact","heroes","heroImages","require","HeroCard","superhero","publisher","alter_ego","first_appearance","characters","src","default","alt","HeroList","useMemo","includes","filter","hero","getHeroesByPublisher","MarvelScreen","DcScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","handleInputChange","reset","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","preventDefault","placeholder","onChange","DashboardRouter","path","component","PrivateRoute","isAutenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d8ada0b.chunk.js","sourcesContent":["var map = {\n\t\"./dc-arrow.jpg\": 37,\n\t\"./dc-batman.jpg\": 38,\n\t\"./dc-black.jpg\": 39,\n\t\"./dc-blue.jpg\": 40,\n\t\"./dc-flash.jpg\": 41,\n\t\"./dc-green.jpg\": 42,\n\t\"./dc-martian.jpg\": 43,\n\t\"./dc-robin.jpg\": 44,\n\t\"./dc-superman.jpg\": 45,\n\t\"./dc-wonder.jpg\": 46,\n\t\"./marvel-captain.jpg\": 47,\n\t\"./marvel-cyclops.jpg\": 48,\n\t\"./marvel-daredevil.jpg\": 49,\n\t\"./marvel-hawkeye.jpg\": 50,\n\t\"./marvel-hulk.jpg\": 51,\n\t\"./marvel-iron.jpg\": 52,\n\t\"./marvel-silver.jpg\": 53,\n\t\"./marvel-spider.jpg\": 54,\n\t\"./marvel-thor.jpg\": 55,\n\t\"./marvel-wolverine.jpg\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","export default __webpack_public_path__ + \"static/media/dc-arrow.15b27bc2.jpg\";","export default __webpack_public_path__ + \"static/media/dc-batman.ab9eadc3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-black.3747c663.jpg\";","export default __webpack_public_path__ + \"static/media/dc-blue.cc8169a3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-flash.b3922f25.jpg\";","export default __webpack_public_path__ + \"static/media/dc-green.01c54ee1.jpg\";","export default __webpack_public_path__ + \"static/media/dc-martian.78565f7d.jpg\";","export default __webpack_public_path__ + \"static/media/dc-robin.ea4afe99.jpg\";","export default __webpack_public_path__ + \"static/media/dc-superman.e9391474.jpg\";","export default __webpack_public_path__ + \"static/media/dc-wonder.970ba2d6.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-captain.d2c7774d.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-cyclops.f1442408.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-daredevil.2f4f1a57.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hawkeye.1f78e874.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hulk.d1af5fe5.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-iron.b394df11.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-silver.1d43a08b.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-spider.054016b4.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-thor.c63e651c.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-wolverine.ee676488.jpg\";","\nimport {createContext} from 'react';\n\n/** Objeto Context que sirve para gestionar la informacion\n *  de la autentificacion de los usuarios.\n */\n\nexport const AuthContext = createContext();","\n\nexport const types = {\n    login : '[auth] login',\n    logout: '[auth] logout',\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\n/** Componente de pantalla de Logueo.\n *  las props se pueden ver en la pestaña Components de Chrome\n *  en este caso se desestructura para obtener history\n */\nexport const LoginScreen = ({ history}) => {\n    \n    \n    const {dispatch} = useContext(AuthContext);\n    \n    const handleLogin = ()=>{\n      \n      const lastPath = localStorage.getItem('lastPath') || '/';\n\n       /** history hace referencia al historial de navegacion.*/\n      // agrega la pagina a la cola del historial. (se puede volver atras)\n       //history.push('/');\n       dispatch( {\n         type: types.login,\n         payload : {\n           name : 'leax',\n         }\n       } );\n       \n       /* elimina de la cola la pagina actual y la reemplaza por la deseada.\n         no se puede volver atras*/\n       history.replace(lastPath);\n    }\n\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={ handleLogin }\n            >\n              Login\n            </button>\n\n        </div>\n    )\n}\n","import React,{ useContext}  from 'react'\nimport { Link, NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../auth/AuthContext'\nimport { types } from '../../types/types';\n\n\n/** Componente Barra de Navegacion , que tiene los \n *  enlaces a las distintas pantallas de la app.\n */\nexport const NavBar = () => {\n\n    const {user, dispatch} = useContext(AuthContext);\n    const history = useHistory();\n\n    const handleLogout = ()=>{\n        dispatch({\n            type:types.logout,\n        })\n        history.replace('/login');\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ms-auto\">\n\n                    <span className=\"nav-item nav-link text-info\" >\n                        {user.name}\n                    </span>\n\n\n\n                    <button\n                        className=\"nav-item nav-link btn\"\n                        onClick={handleLogout}\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst heroImages = require.context('../../assets/heroes', true);\n\nexport const HeroCard = ({ \n    id,\n    superhero,\n    publisher,\n    alter_ego,\n    first_appearance,\n    characters\n}) => {\n    return (\n        <div className=\"col\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h5 className=\"card-title fw-bolder\">{superhero}</h5>\n                </div>\n                <img src={heroImages(`./${id}.jpg`).default } className=\"card-img-top\" alt={superhero}/>\n            \n                <div className=\"card-body \" >\n                    <p className=\"card-text fw-bold\">{alter_ego}</p>\n                    {(alter_ego !== characters) && <small className=\"card-text\">{characters}</small>}\n                    <p className=\"card-text\">{first_appearance}</p>\n                </div>\n                <div className=\"d-flex justify-content-between card-footer\">\n                    <small className=\"text-muted\">\n                        {publisher}  \n                    </small>\n                    <Link to={`./heroe/${ id }`}>\n                            Más...\n                    </Link>\n                </div> \n            </div>\n            \n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\n/** componente que retorna una lista de heroes del listado de \n * heroes filtrada por la editorial\n */\nexport const HeroList = ({publisher}) => {\n\n    /** para evitar recargar informacion inecesariamente \n     *  se puede usar el hook useMemo para acelerar el cambio de \n     *  pantalla\n    */\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [publisher])\n    //const heroes = getHeroesByPublisher( publisher );\n\n    return (\n        <div className=\"row row-cols-1 row-cols-md-3 g-3 animate__animated animate__fadeIn\">\n            {\n                heroes.map( hero => (\n                    <HeroCard \n                        key={hero.id}\n                        {...hero}\n                    />\n                   \n                ))\n            }\n        </div >   )\n}\n","import {heroes} from '../data/heroes.js';\n\n/** filtra heroes por la editorial  */\nexport const getHeroesByPublisher = (publisher) => {\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    // si el argumento recibido no es valido retornar error.\n    if( !validPublishers.includes(publisher)) {\n        throw new Error(`Publisher ${publisher} no es correcto`);\n    }\n    // filtra el arreglo de heroes con el criterio elegido.\n    return heroes.filter( hero => hero.publisher === publisher );\n\n\n}","import React from 'react'\nimport {HeroList} from '../heroes/HeroList.js'\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n            \n            <HeroList publisher='Marvel Comics' />\n        </div>\n    )\n}\n","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <hr/>\n            \n            <HeroList publisher='DC Comics' />\n        </div>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { getHeroeById } from '../../selectors/getHeroesById';\n\nconst heroImages = require.context('../../assets/heroes', true);\n\nexport const HeroScreen = ({history}) => {\n\n    /** Hook de react-router-dom permite extraer\n     *  informacion de la pagina actual.\n     */\n    const {heroeId} = useParams();\n    \n    /** Se extraen lso datos del heroe con el selector */\n    const hero = useMemo(() => getHeroeById(heroeId), [heroeId]);\n    //const hero = getHeroeById(heroeId);\n\n    \n    \n    /** TECNICA PARA REDIRECCIONAR SI LA URL DE LA PAGINA NO \n     *  ES CORRECTA\n     */\n    if( !hero ) {\n        return <Redirect to=\"/\"/>;\n    }\n    /** ------------------------------------------------ */\n\n    const handleReturn = ()=>{\n        if( history.length <= 2){\n            history.push('/');\n        } else {\n            history.goBack();\n        }\n    }\n\n    /** RETORNO NORMAL DEL COMPONENTE CON LA INFO DEL HEROE */\n    const {\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters\n    } = hero;\n\n    return (\n        <div className=\"row mt-4 \">\n            <div className=\"col-4\">\n                <img \n                    //src={`../../assets/heroes/${ heroeId }.jpg`}\n                    src={ heroImages(`./${heroeId}.jpg`).default }\n                    alt={superhero}\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                />\n            </div>\n\n            <div className=\"col-8 animate__animated animate__fadeInDown\">\n                <h3>{superhero}</h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"><b>Alter ego:</b> {alter_ego} </li>\n                    <li className=\"list-group-item\"><b>Publisher:</b> {publisher} </li>\n                    <li className=\"list-group-item\"><b>First Apareance:</b> {first_appearance} </li>\n                </ul>\n                <h5>Characters</h5>\n                <p>{characters}</p>\n\n                <button \n                    className=\"btn btn-outline-info\"\n                    onClick={handleReturn}\n                >\n                    Return\n                </button>\n            </div>\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes.js'\n\n/** devuelve un heroe por el id */\nexport const getHeroeById = ( id ) =>{\n\n    return heroes.find( hero => hero.id === id);\n\n\n}","\nimport React, { useMemo } from 'react';\nimport queryString from 'query-string'\n\nimport { useLocation } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\n/** Componente que filtra la lista de heroes por nombre */\nexport const SearchScreen = ({history}) => {\n    /** Propiedad del componente que obtiene info relacionada\n     *  a la url actual\n     */\n    const location = useLocation();\n\n    /** queryString, libreria para parsear una query GET */\n    const { q = ''} = queryString.parse( location.search );\n\n    /** custom hook useForm() */\n    const [values,handleInputChange,reset] = useForm({  \n        searchText: q\n    });\n\n    /** texto del input de busqueda obtenido por useForm */\n    const {searchText} = values \n\n    /** se llama al selector getHeroesByName usando el hook useMemo para \n     *  que no se haga labusqueda mientras se escribe en el input\n     */\n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [q] );\n\n    const handleSearch = (e) =>{\n        e.preventDefault();\n\n        history.push(`?q=${searchText}`);\n        \n        reset();\n    }\n\n    return (\n        <div>\n            <h1>Search Hero</h1>\n            <hr />\n\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4>Search Form</h4>\n                    <hr />\n                    <form onSubmit={handleSearch}>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero..\"\n                            className=\"form-control\"\n                            onChange={handleInputChange}\n                            name=\"searchText\"\n                            value={searchText}\n                        />\n\n                        <button \n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                           \n                        >\n                            Search\n                        </button>\n                    </form>\n                </div>\n\n                <div className=\"col-8\">\n                    <h4>Results</h4>\n                    <hr />\n                    {\n                        heroesFiltered.map( hero => \n                            <HeroCard \n                                key={hero.id}\n                                {...hero}\n                            />\n                        )\n                    }\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n","import  { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n    \n    const [values, setValues] = useState(initialState)\n\n    const reset = ()=>{\n        setValues( initialState );\n    }\n\n     /** se desestructura e.target en {target} */\n     const handleInputChange = ({target}) =>{\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [values, handleInputChange,reset];\n}","import {heroes} from '../data/heroes.js'\n\n\n/** filtro de busqueda de heroes por nombre */\nexport const getHeroesByName = (name = '') => {\n    \n    if (name === '') {\n       return []; \n    }\n\n    name = name.toLocaleLowerCase();\n\n    /** para cada heroe, compara el nombre del heroe en minuscula con name */\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name ) );\n}\n\n","import React  from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\n\n\nimport { NavBar } from '../components/ui/NavBar.js';\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen.js\";\nimport { DcScreen } from '../components/dc/DcScreen.js';\nimport { HeroScreen } from '../components/heroes/HeroScreen.js';\nimport { SearchScreen } from '../components/search/SearchScreen.js';\n\n/** Compoente que contiene la barra de navegacion y un \n *  switch que redirecciona a cada una de las pantallas \n *  de la app.\n *  DashBoard \n *         -> /marvel (inicio)\n *         -> /heroe\n *         -> /dc\n */\nexport const DashboardRouter = ()  => {\n    return (\n        <>\n            {/* \n                El NavBar se visualizara en todas \n                las pantallas que redireccione el switch\n            */}\n            <NavBar />\n            <div className=\"container mt-2\">\n                <Switch >\n                    <Route path=\"/marvel\" component={ MarvelScreen } />\n                    <Route path=\"/heroe/:heroeId\" component={ HeroScreen } />\n                    <Route path=\"/dc\" component={ DcScreen } />\n                    <Route path=\"/search\" component={ SearchScreen } />\n\n                    <Redirect to=\"/marvel\" />\n                </Switch>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport {Route, Redirect } from 'react-router';\nimport PropTypes from 'prop-types'\n\n/** Elemento wrapper que redirecciona a las rutas privadas si el usuario\n *  esta logueado, sino a la pantalla loggin\n */\nexport const PrivateRoute = ({\n    isAutenticated,\n    component : Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath',rest.location.pathname);\n\n    return (\n        <Route {...rest} \n            component = { (props) =>(\n                // (props) representa el estado previo del componente\n                (isAutenticated) // operador ternario\n                    ? (<Component {...props}/>)     // verdadero\n                    : (<Redirect to = \"/login\"/>)   // falso\n            ) }\n\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAutenticated : PropTypes.bool.isRequired,\n    component : PropTypes.func.isRequired\n}\n","import React from 'react'\nimport {Route, Redirect } from 'react-router';\nimport PropTypes from 'prop-types'\n\n/** Elemento wrapper que redirecciona a las rutas publicas si el usuario\n *  no esta logueado, sino a la pantalla raiz es decir dashboard\n */\nexport const PublicRoute = ({\n    isAutenticated,\n    component : Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest} \n            component = { (props) =>(\n                // (props) representa el estado previo del componente\n                (!isAutenticated) // operador ternario\n                    ? (<Component {...props}/>) // falso \n                    : (<Redirect to = \"/\"/>)    // verdadero\n            ) }\n\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAutenticated : PropTypes.bool.isRequired,\n    component : PropTypes.func.isRequired\n}\n","import React, { useContext } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport { AuthContext } from \"../auth/AuthContext\";\n\nimport { LoginScreen } from \"../components/login/LoginScreen\";\nimport { DashboardRouter } from \"./DashboardRouter\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\n/** Componente Raiz del Arbol de rutas de la app \n *  Redirecciona a dos lugares que tienen diseños distintos:\n *      /login -> pantalla de logueo \n *      /  -> pantalla de inicio\n*/\nexport const AppRouter = () => {\n\n    const {user} = useContext(AuthContext);\n    \n    return (\n        <Router>\n        <div>\n          <Switch>\n            <PublicRoute \n                isAutenticated = {user.logged}\n                exact path=\"/login\" \n                component={ LoginScreen }\n            />\n            <PrivateRoute \n                isAutenticated = {user.logged}\n                path=\"/\" \n                component={ DashboardRouter } \n            /> \n          </Switch>\n        </div>\n      </Router>\n    );\n};\n","import {types} from '../types/types.js';\n\n/** Reducer que modifica el estado del usuario\n *  de acuerdo a la accion recibida\n */\n\nexport const authReducer = (state = {}, action)=>{\n    switch ( action.type ) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            }\n        case types.logout:\n            return {\n                logged: false\n            }\n    \n        default:\n            return state;\n    }\n}","import React, {  useEffect, useReducer } from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport {AuthContext} from './auth/AuthContext.js';\nimport {authReducer} from './auth/authReducer.js';\n\n\n/** Componente Mas alto de Heroes App\n * \n *  Asigna y mantiene la informacion del usuario que se loguea\n *  Revisar AuthContext y authReducer\n * \n *  Los componentes hijos pueden acceder a esta informacion por\n *  localStorage\n */\n\n// Revisa al inicio el localStorage si hay un usuario y devuelve el estado.\n// Si no false.\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || {logged: false}; \n}\n\n\nexport const HeroesApp = () => {  \n\n    const [user, dispatch] = useReducer(authReducer, {}, init)\n    \n    useEffect(() => {\n        localStorage.setItem('user',JSON.stringify(user));\n    }, [user])\n\n\n    return (\n        <AuthContext.Provider value = {{user, dispatch}} >\n            <AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp.js';\n\n\nimport 'animate.css';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}